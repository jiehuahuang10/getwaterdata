name: 每日水务数据自动更新

on:
  schedule:
    # 每天下午6点执行 (UTC时间10:00 = 北京时间18:00)
    - cron: '0 10 * * *'
    # 每周一上午9点保持活跃 (UTC时间1:00 = 北京时间9:00)
    - cron: '0 1 * * 1'
  workflow_dispatch: # 允许手动触发

jobs:
  update-water-data:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 设置30分钟超时
    permissions:
      contents: write
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install requests beautifulsoup4 openpyxl
    
    - name: 创建配置文件
      run: |
        echo "LOGIN_URL=${{ secrets.LOGIN_URL }}" > config.env
        echo "USERNAME=${{ secrets.USERNAME }}" >> config.env
        echo "PASSWORD=${{ secrets.PASSWORD }}" >> config.env
        echo "REPORT_URL=${{ secrets.REPORT_URL }}" >> config.env
    
    - name: 执行水务数据更新
      id: update_data
      run: |
        python github_automation.py
      env:
        TZ: Asia/Shanghai
        LOGIN_URL: ${{ secrets.LOGIN_URL }}
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        REPORT_URL: ${{ secrets.REPORT_URL }}
      continue-on-error: true
    
    - name: 检查执行结果
      id: check_result
      run: |
        if [ -f "last_execution_summary.json" ]; then
          echo "执行摘要存在"
          echo "success=true" >> $GITHUB_OUTPUT
        else
          echo "执行摘要不存在，可能执行失败"
          echo "success=false" >> $GITHUB_OUTPUT
        fi
    
    - name: 提交更新的Excel文件
      if: steps.check_result.outputs.success == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add excel_exports/石滩供水服务部每日总供水情况.xlsx
        git add *.json
        git add last_execution_summary.json
        if git diff --staged --quiet; then
          echo "没有文件更改"
        else
          git commit -m "自动更新水务数据 - $(date +'%Y-%m-%d %H:%M:%S')"
          git push
        fi
    
    - name: 创建执行状态徽章
      if: always()
      run: |
        # 创建执行状态文件
        if [ "${{ steps.check_result.outputs.success }}" == "true" ]; then
          echo "✅ 最后执行成功: $(date +'%Y-%m-%d %H:%M:%S')" > execution_status.md
        else
          echo "❌ 最后执行失败: $(date +'%Y-%m-%d %H:%M:%S')" > execution_status.md
        fi
        
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add execution_status.md
        git commit -m "更新执行状态 - $(date +'%Y-%m-%d %H:%M:%S')" || true
        git push || true
    
    - name: 失败通知
      if: failure()
      run: |
        echo "❌ GitHub Actions执行失败"
        echo "请检查日志: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "失败时间: $(date +'%Y-%m-%d %H:%M:%S')"
    
    - name: 成功通知
      if: success()
      run: |
        echo "✅ GitHub Actions执行成功"
        echo "执行时间: $(date +'%Y-%m-%d %H:%M:%S')"
        echo "Excel文件已更新"
